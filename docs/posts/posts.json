[
  {
    "path": "posts/2022-02-10-network-analysis-hw-2/",
    "title": "Network Analysis HW #2",
    "description": "My second homework assignment for POLISCI 753 Political and Social Networks.",
    "author": [
      {
        "name": "Leah Dion",
        "url": "https://leahrosalie.github.io"
      }
    ],
    "date": "2022-02-10",
    "categories": [],
    "contents": "\nThe Game of Thrones like/dislike network contains 46 nodes, each of which are individual characters from the series of books by George R.R. Martin. The 1143 edges connecting the vertices represent the weight of the relationship between actors; larger numbers correspond to stronger positive relationships while smaller numbers correspond to stronger negative relationships. Simply put, a negative number indicates how much a character dislikes another while a positive number indicates how much a character likes another. The range of these likes and dislikes is \\([-5, 5]\\), so a score of either of the endpoints would mean that character likes, is liked, dislikes, or is disliked as much as possible.\nOne thing that remains unclear is what it means to have a zero in a relationship. For an unweighted network a zero would clearly indicate there is not a connection between those two actors. For a weighted network that could also suggest that there is a mutual or neutral relationship that one actor feels toward another. For my brief analysis I’m going to assume that the zeroes mean no relationship exists between the two characters. I feel safe doing so because my knowledge of the Game of Thrones show and books validates that assumption after visual inspection of the adjacency matrix.\nThe network is also directed, so the connection between actors \\(A\\) and \\(B\\) is not necessarily the same as that between \\(B\\) and \\(A\\). It appears that the columns represent outdegree relationships, or how much that character likes/dislikes other characters. The rows therefore are the inverse; how favorably/unfavorably the character is viewed by others, or the indegree.\n\nStannis.Baratheon \n               -5 \nJaime.Lannister \n             -4 \n\nTake Jaime Lannister and Stannis Baratheon for example. Stannis, notorious for hating pretty much everyone, seems to dislike Jaime Lannister with a weight of 5. On the other hand, the kingslayer, notorious for being hated by pretty much everyone, dislikes Stannis by a factor of 4.\n\n  Jaime.Lannister Stannis.Baratheon\n1        -1.30303         -2.909091\n\nChecking the average of both Jaime and Stannis’ outgoing ties, at a glance it seems that Jaime (-1.3) views other characters only slightly negatively so his disliking of Stannis is far outside of his mean. Comparing to Stannis’ disliking of Jaime, it seems that may be closer to the mean (-2.91) of the middle Baratheon brother’s relationships.\n\nStannis Baratheon   Jaime Lannister \n        -2.575758         -1.363636 \n\nComparing now to the other character’s feelings toward the two, people in the network seem to dislike Stannis (-2.58) quite a bit more than Jaime (-1.36). At the same time, it seems that Stannis dislikes others slightly more than others dislike him while Jaime is disliked slightly more than he dislikes others. This feels pretty accurate since it aligns well with my interpretation of the characters in the books and show.\n\n                      cmeans\nStannis.Baratheon  -2.909091\nDaenerys.Targaryen -2.885714\nMelisandre         -2.653846\nVarys              -2.038462\nBalon.Greyjoy      -2.000000\nPyat.Pree          -2.000000\n\nIt would be an understatement to say that Stannis Baratheon was obsessed with his claim to the iron throne and clearly ticked off a lot of people in his attempt to sit in it as king. In the process, he also despised everyone that got in his way and has the highest mean dislike toward others out of anyone (-2.91), followed closely behind by the dragon queen, Daenerys Targaryen (-2.89), and Stannis’ right-hand witch, Melisandre (-2.65).\n\n                      rmeans\nDaenerys Targaryen -2.771429\nMelisandre         -2.640000\nStannis Baratheon  -2.575758\nTheon Greyjoy      -2.085714\nPyat Pree          -2.000000\nViserys Targaryen  -2.000000\n\nSure enough, the top three most disliked by others are the mother of dragons (-2.77), Melisandre (-2.64), and Stannis (-2.58). Seems like in the Game of Thrones universe if you actively hate other characters and try to overthrow the throne you’re probably going to be pretty hated yourself as well. Turns out not that many people are on board with usurping power structures in Westeros.\n\n[1] \"Mean cumulative likes/dislikes: -1.03394475747607\"\n                           haters\nDaenerys.Targaryen    -5.65714286\nStannis.Baratheon     -5.48484848\nMelisandre            -5.29384615\nPyat.Pree             -4.00000000\nVarys                 -3.96153846\nTheon.Greyjoy         -3.93419913\nBalon.Greyjoy         -3.85714286\nViserys.Targaryen     -3.80952381\nGregor.Clegane        -3.50985222\nKhal.Drogo            -3.38461538\nTywin.Lannister       -3.35294118\nDavos.Seaworth        -3.24643875\nJorah.Mormont         -2.93103448\nCersei.Lannister      -2.82995951\nSandor.Clegane        -2.78409091\nJoffrey.Baratheon     -2.77597841\nJaime.Lannister       -2.66666667\nRenly.Baratheon       -2.65625000\nGendry                -2.61152882\nMargaery.Tyrell       -2.45833333\nBronn                 -2.28201970\nBrienne.of.Tarth      -2.25000000\nLoras.Tyrell          -2.00000000\nGrand.Maester.Pycelle -1.89153439\nRobb.Stark            -1.67567568\nTyrion.Lannister      -1.45161290\nPodrick.Payne         -0.92142857\nLancel.Lannister      -0.91176471\nCatelyn.Stark         -0.81578947\nPetyr.Baelish         -0.80000000\nShae                  -0.05882353\nOsha                   0.53162055\nJaqen.H.ghar           1.20000000\nEddard.Stark           1.43039591\nLysa.Arryn             1.47368421\nXaro.Xhoan.Daxos       1.50000000\nRos                    1.88888889\nBran.Stark             1.93844697\nRobert.Baratheon       2.03118280\nArya.Stark             2.27651515\nSansa.Stark            2.92842742\nJon.Snow               3.19384058\nHodor                  3.45000000\nSamwell.Tarly          3.71428571\nJeor.Mormont           5.40000000\nMaester.Luwin          5.74583333\n\nHere I’ve created what I’m going to define as the Hater Index (lots of hating happening here in Westeros) of this group of core Game of Thrones characters. I added together the mean outdegree like/dislike of each character with their mean indegree like/dislike to get an overall score that acts as a general positivity/negativity score. If the absolute value of the Hater Index score is greater than five, that character must have either both positive or both negative incoming and outgoing relationships.\nA Hater Index score close to zero (negatively or positively) should indicate that a character was pretty neutral to some extent. My goal here is to see if there is any association between the neutrality of a character and their degree centrality.\n\n                      haters\nPetyr.Baelish    -0.80000000\nLancel.Lannister -0.91176471\nOsha              0.53162055\nPodrick.Payne    -0.92142857\nShae             -0.05882353\nCatelyn.Stark    -0.81578947\n              name totDegree inDegree outDegree\n1    Petyr.Baelish        50       25        25\n2 Lancel.Lannister        35       17        18\n3             Osha        45       23        22\n4    Podrick.Payne        41       21        20\n5             Shae        33       17        16\n6    Catelyn.Stark        76       38        38\n\nThere are six characters who fall within \\([-1,1]\\) in the Hater Index. Interestingly, all but one are less than zero, though maybe not so significant since the mean of the haters list is -1.03.\nComparing the degree centrality of these six, Catelyn Stark has the highest total degree, with 76 out of the total 92 possibilities in the directed network. The next highest is Petyr Baelish whose place on this list is unsurprising as he spends much of his time conniving and backstabbing despite his perceived neutrality.\n\n                 name totDegree inDegree outDegree\n1   Joffrey.Baratheon        77       39        38\n2    Cersei.Lannister        77       38        39\n3       Catelyn.Stark        76       38        38\n4          Robb.Stark        74       37        37\n5  Daenerys.Targaryen        70       35        35\n6       Theon.Greyjoy        68       33        35\n7     Tywin.Lannister        68       34        34\n8   Stannis.Baratheon        66       33        33\n9    Brienne.of.Tarth        66       32        34\n10    Jaime.Lannister        66       33        33\n                      haters\nDaenerys.Targaryen -5.657143\nStannis.Baratheon  -5.484848\nMelisandre         -5.293846\nPyat.Pree          -4.000000\nVarys              -3.961538\nTheon.Greyjoy      -3.934199\nBalon.Greyjoy      -3.857143\nViserys.Targaryen  -3.809524\nGregor.Clegane     -3.509852\nKhal.Drogo         -3.384615\n\nChecking out the top ten most connected characters, Cateyln is right up at the top while our friends Stan and Jay round out the bottom of this list. Also at the top are four Lannisters (including Joffrey) and another two Starks (including Ree..I mean Theon), which represent seven out of the top ten most popular characters.\nComparing the Hater Index scores of these individuals reveals that, at a glance, there does not seem to be much of a relationship between one’s overall likeability and their degree centrality within the network. This list may actually indicate the inverse of my initial hypothesis; those who are the biggest haters (in/out) tend to be more connected. The list of top ten haters shares a few names with the top ten degree centrality, but I would have to take more rigorous measures to validate that observation.\nFor now, it feels safe to say that Dany, Stannis, and the Red Witch are one angry trio.\n\n\n\n",
    "preview": {},
    "last_modified": "2022-02-23T23:17:17-05:00",
    "input_file": "network-analysis-hw-2.knit.md"
  },
  {
    "path": "posts/2022-02-02-network-analysis-hw-1/",
    "title": "Network Analysis HW #1",
    "description": "My first homework assignment for POLISCI 753 Political and Social Networks.",
    "author": [
      {
        "name": "Leah Dion",
        "url": "https://leahrosalie.github.io"
      }
    ],
    "date": "2022-02-02",
    "categories": [],
    "contents": "\nFor this assignment I’m going to use the Game of Thrones like and dislike dataset. First, I need to read in the CSV file and adjust the data structure to be in the form needed to make an igraph and statnet object from the adjacency matrix.\n\n\ngot <- read.csv('got_like_dislike.csv', header=TRUE, \n                stringsAsFactors = FALSE)\n\ngot.net <- as.matrix(got[4:49])\nrownames(got.net) <- got$Name\nnet.nodes <- got[c(\"Name\",\"Current.house\",\"Former.house\")]\ngot.ig <- graph_from_adjacency_matrix(got.net, mode = \"directed\",\n                                      weighted = TRUE, \n                                      add.colnames = NA, \n                                      add.rownames = \"name\")\n\n\n\nNow, making the igraph object.\n\n\nV(got.ig)$Current.house <- net.nodes$Current.house[match(net.nodes$Name, \n                                                         V(got.ig)$name)]\nV(got.ig)$Former.house <- net.nodes$Former.house[match(net.nodes$Name, \n                                                       V(got.ig)$name)]\n\n\n\nAnd the statnet object.\n\n\ngot.stat <- network(got.net, matrix.type = \"adjacency\", directed = TRUE)\ngot.stat <- set.edge.value(got.stat, attrname = \"weight\", value = got.net)\n    \ngot.stat%v%\"Current.house\" <- net.nodes$Current.house[match(net.nodes$Name, \n                                                            got.stat%v%'vertex.names')]\ngot.stat%v%\"Former.house\"  <- net.nodes$Former.house[match(net.nodes$Name, \n                                                           got.stat%v%'vertex.names')]\n\n\n\nNext I want to take a look at the network attributes using the print() command.\n\n\nprint(got.stat)\n\n\n Network attributes:\n  vertices = 46 \n  directed = TRUE \n  hyper = FALSE \n  loops = FALSE \n  multiple = FALSE \n  bipartite = FALSE \n  total edges= 1143 \n    missing edges= 0 \n    non-missing edges= 1143 \n\n Vertex attribute names: \n    Current.house Former.house vertex.names \n\n Edge attribute names not shown \n\nis_weighted(got.ig)\n\n\n[1] TRUE\n\nOkay. So this GOT network has 46 nodes (vertices) and 1143 ties (edges). It is a directed network and is also weighted based on how much or little a character likes or dislikes another; negative is dislike and positive is like. Also, there are no missing edges so that should mean that we do not have any isolates.\n\n\nnetwork::list.vertex.attributes(got.stat)\n\n\n[1] \"Current.house\" \"Former.house\"  \"na\"            \"vertex.names\" \n\nnetwork::list.edge.attributes(got.stat)\n\n\n[1] \"na\"     \"weight\"\n\nThe vertex attributes are Current.house, Former.house, and vertex.names while the edge attribute is the weight of the two character’s relationship.\nNext I’ll explore the dyad and triad census.\n\n\nsna::dyad.census(got.stat)\n\n\n     Mut Asym Null\n[1,] 554   35  446\n\nsna::triad.census(got.stat, mode='graph')\n\n\n        0    1    2    3\n[1,] 1975 5109 4405 3691\n\nsum(sna::triad.census(got.stat, mode='graph'))\n\n\n[1] 15180\n\nThe dyad census confirms that this is a directed network since there are asymmetric ties. It seems that a bit more than half of the dyads are mutual ties, which suggests that either there are more stable relationships on GOT than not or, potentially, this character list happens to include larger families such as the Starks that are mutually connected with shared enemies.\nHaving watched the show several times through I lean towards the latter, though it is particularly centered around the interconnectedness of large, dynamic families.\nThere are 15,180 triads in the GOT network data and there are 1975 empty triads, 5109 with one edge, 4405 two path, and 3691 triangles.\n\n\ngtrans(got.stat)\n\n\n[1] 0.7184677\n\ngtrans(got.stat, measure='rank')\n\n\n[1] 0.7184677\n\ngtrans(got.stat, measure='correlation')\n\n\n[1] 0.6074768\n\nPlaying around with the measure parameter, it seems that ‘correlation’ may incorporate the weights between nodes of the GOT network. My initial interpretation of this might be that the weights seem to weaken the transitivity of the network, though I will have to check back once I develop a deeper analytical lens.\n\n\ntransitivity(got.ig, type='global')\n\n\n[1] 0.7349339\n\ntransitivity(got.ig, type='average')\n\n\n[1] 0.754549\n\nIt seems that the global clustering coefficient is slightly smaller than the local transitivity, perhaps suggesting that altiers of the nodes are themselves connected.\n\n\nigraph::components(got.ig)$no\n\n\n[1] 1\n\nigraph::components(got.ig)$csize\n\n\n[1] 46\n\nisolates(got.stat)\n\n\ninteger(0)\n\nThis last check of the network components reveals that there is just one major component that contains all 46 nodes, with no isolates. This aligns with the global and average transitivity analysis from above.\n\n\n\n",
    "preview": {},
    "last_modified": "2022-02-03T00:51:42-05:00",
    "input_file": "network-analysis-hw-1.knit.md"
  },
  {
    "path": "posts/welcome/",
    "title": "Welcome to My Blog",
    "description": "Welcome to our new blog, My Blog. We hope you enjoy \nreading what we have to say!",
    "author": [
      {
        "name": "Nora Jones",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2022-01-31",
    "categories": [],
    "contents": "\n\n\n\n",
    "preview": {},
    "last_modified": "2022-01-31T12:04:09-05:00",
    "input_file": {}
  }
]
